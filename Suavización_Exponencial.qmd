---
title: "Suavización Exponencial"
author: "Luis Márquez"
format:
  html:
    embed-resources: true
    theme:
      light: minty
      dark: darkly
toc: true
df-print: paged
---

## pkgs

```{r}
#| message: false
library(tidyverse)
library(fpp3)
```

## Ej: Producción de cerveza

Ya habíamos modelado la producción de cerveza utilizando los métodos de referencia:

```{r}
recent_production <- aus_production %>% filter(year(Quarter) >= 1992)
beer_train <- recent_production %>% filter(year(Quarter) <= 2007)

beer_fit <- beer_train %>%
  model(
    Mean = MEAN(Beer),
    `Naïve` = NAIVE(Beer),
    `Seasonal naïve` = SNAIVE(Beer),
    Drift = RW(Beer ~ drift())
  )

beer_fc <- beer_fit %>%
  forecast(h = 10)

beer_train |> 
  autoplot(Beer)

beer_fc %>%
  autoplot(recent_production, level = NULL) +
  xlab("Year") + ylab("Megalitres") +
  ggtitle("Forecasts for quarterly beer production") +
  guides(colour=guide_legend(title="Forecast"))
```

Calculando las métricas de error en el **entrenamiento**:

```{r}
beer_accu_train <- accuracy(beer_fit) |> 
  arrange(MAE)
beer_accu_train
```

Nos dice que el modelo que mejor se ajusta en el entrenamiento, de acuerdo al **MAE** es **`{r} beer_accu_train |> select(.model) |> slice(1) |> pull()`**.

Calculamos las métricas de **error de pronóstico**:

```{r}
beer_accu_fc <- beer_fc |> 
  accuracy(recent_production) |> 
  arrange(MAE)

beer_accu_fc
```

Esto nos indica que el modelo que tiene un menor **MAE** en el pronóstico es **`{r} beer_accu_fc |> select(.model) |> slice(1) |> pull()`**.

## Visualización

Graficamos los datos de entrenamiento en niveles y en logaritmos:

```{r}
beer_train |> 
  autoplot(Beer)

beer_train |> 
  autoplot(log(Beer))
```

Normal

```{r}
beer_train |> 
  model(
    STL(Beer, robust = TRUE)
  ) |> 
  components() |> 
  autoplot()
```

Con logaritmos

```{r}
beer_train |> 
  model(
    STL(log(Beer), robust = TRUE)
  ) |> 
  components() |> 
  autoplot()
```

## Ajuste de modelos



```{r}
beer_fit <- beer_train |> 
  model(
    snaive = SNAIVE(Beer),
    ets_ANA = ETS(Beer ~ error("A") + trend("N") + season("A")),
    ets_AAda = ETS(Beer ~ error("A") + trend("Ad") + season("A")),
    ets_MAdM = ETS(Beer ~ error("M") + trend("Ad") + season("M")),
    ets_ANA_l = ETS(log(Beer ~ error("A") + trend("N") + season("A"))),
    ets_AAda_l = ETS(log(Beer ~ error("A") + trend("Ad") + season("A"))),
    ets_MAdM_l = ETS(log(Beer ~ error("M") + trend("Ad") + season("M")))
  )

beer_fit
```
